:py:mod:`danRerLib.mapping`
===========================

.. py:module:: danRerLib.mapping

.. autoapi-nested-parse::

   Gene Mapping Module
   ===================

   This module provides functions for gene ID mapping and orthology checks between different species,
   with a focus on Zebrafish and human gene IDs.

   Functions:
       - `convert_ids`: Convert a list of Gene IDs between different types.
       - `add_mapped_column`: Add a new column with mapped Gene IDs to a pandas DataFrame.
       - `convert_to_human`: Convert Zebrafish gene IDs to their corresponding human orthologs.
       - `convert_to_zebrafish`: Convert human gene IDs to their corresponding Zebrafish orthologs.
       - `add_mapped_ortholog_column`: Add a new column with mapped ortholog Gene IDs to a pandas DataFrame.
       - `build_gene_mapping`: Build a master gene mapping file based on Zebrafish gene ID conversions.
       - `build_ortho_mapping`: Build a master orthology mapping file between Zebrafish and human genes.

   Constants:
       - `NCBI_ID`: Identifier for 'NCBI Gene ID'.
       - `ZFIN_ID`: Identifier for 'ZFIN ID'.
       - `ENS_ID`: Identifier for 'Ensembl ID'.
       - `SYMBOL`: Identifier for gene 'Symbol'.
       - `HUMAN_ID`: Identifier for 'Human NCBI Gene ID'.

   .. rubric:: Notes

   - This module is designed for use in genomics research and gene ID mapping projects.
   - It provides functions to convert gene IDs between different types, build mapping files, and perform orthology checks.
   - If you would like to re-build mapping files, ensure that your dataset and mapping files are accurately named and organized as per the function requirements.

   .. rubric:: Example

   To convert a list of Zebrafish gene IDs to human orthologs:
   ```
   gene_list = ['ENSDARG00000012345', 'ENSDARG00000067890']
   converted_genes = convert_to_human(gene_list, ENS_ID, HUMAN_ID)
   ```

   For detailed information on each function and their usage, please refer to the documentation.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   danRerLib.mapping.convert_ids
   danRerLib.mapping.add_mapped_column
   danRerLib.mapping.convert_to_human
   danRerLib.mapping.convert_to_zebrafish
   danRerLib.mapping.get_ortho_ids
   danRerLib.mapping.add_mapped_ortholog_column
   danRerLib.mapping.build_gene_mapping
   danRerLib.mapping.build_ortho_mapping
   danRerLib.mapping.convert_to_str
   danRerLib.mapping._make_sure_is_pandas_series
   danRerLib.mapping._check_valid_zebrafish_gene_id_type
   danRerLib.mapping._check_valid_gene_id_type_for_orthology
   danRerLib.mapping._check_column_name_matches_id_choice



Attributes
~~~~~~~~~~

.. autoapisummary::

   danRerLib.mapping.ids


.. py:exception:: DatabaseNotFoundError


   Bases: :py:obj:`Exception`

   Raised when the the database directory is not found


.. py:exception:: InvalidGeneTypeError


   Bases: :py:obj:`Exception`

   Raised when the Gene ID Type is invalid


.. py:function:: convert_ids(gene_list, id_from, id_to, keep_mapping=False, out_format=None)

   Convert a list of Gene IDs.

   :param gene_list: A list of Gene IDs with supported formats like list, pd.Series,
                     pd.DataFrame, or np.array.
   :type gene_list: array-like
   :param id_from: The current Gene ID type.
   :type id_from: str
   :param id_to: The Gene ID type to convert to.
   :type id_to: str
   :param keep_mapping: Whether to keep a mapping of the original IDs to the
                        converted IDs. Default is False.
   :type keep_mapping: bool, optional
   :param out_format: The desired output format for the result. Default is None.
   :type out_format: str, optional

   :returns: A pandas Series or DataFrame containing the converted Gene IDs.
   :rtype: pd.Series or pd.DataFrame

   Other:
       Gene ID Type Options: NCBI Gene ID, ZFIN ID, Symbol, Ensembl ID

   .. rubric:: Notes

   - if the order is important, it is recommended to have keep_mapping = True. Otherwise,
     the mapping order is not guaranteed.


.. py:function:: add_mapped_column(data, id_from, id_to, column_name_with_ids=None, keep_old_ids=True, drop_na=False)

   Add a new column to a pandas DataFrame with mapped Gene IDs.

   :param data: A pandas DataFrame containing a column that has Gene IDs of some type.
   :type data: pd.DataFrame, list
   :param id_from: The current Gene ID type. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, or Symbol.
   :type id_from: str
   :param id_to: The Gene ID type to convert to. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, or Symbol.
   :type id_to: str
   :param column_name_with_ids: The name of the column containing the Gene IDs if it doesn't match id_from.
   :type column_name_with_ids: str, optional
   :param keep_old_ids: Whether to keep the old Gene ID column. Default is True.
   :type keep_old_ids: bool, optional
   :param drop_na: Whether to drop rows with NA values in the resulting mapped column. Default is False.
   :type drop_na: bool, optional

   :returns: A pandas DataFrame containing the added mapped column.
   :rtype: pd.DataFrame

   .. rubric:: Notes

   - This function adds a new column to the input DataFrame containing the mapped Gene IDs.
   - The new column will have the name 'Gene ID (Mapped)' unless specified otherwise.


.. py:function:: convert_to_human(gene_list, zfish_gene_type, keep_mapping=False, keep_missing_orthos=False)

   Convert a list of Zebrafish gene IDs to their human orthologs.

   :param gene_list: A list of Zebrafish gene IDs to be converted to human orthologs.
   :type gene_list: list
   :param zfish_gene_type: The current gene ID type for the Zebrafish genes. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, or Symbol.
   :type zfish_gene_type: str
   :param keep_mapping: Whether to retain the mapping information. Default is False.
   :type keep_mapping: bool, optional
   :param keep_missing_orthos: Whether to keep gene IDs with missing orthologs. Default is False.
   :type keep_missing_orthos: bool, optional

   :returns: A list of human gene IDs corresponding to the Zebrafish gene IDs.
   :rtype: list

   .. rubric:: Notes

   - This function converts Zebrafish gene IDs to their human orthologs using orthology mapping.
   - The `zfish_gene_type` parameter specifies the type of Zebrafish gene IDs.
   - To retain the mapping information, set `keep_mapping` to True.
   - To keep Zebrafish gene IDs with missing orthologs, set `keep_missing_orthos` to True.


.. py:function:: convert_to_zebrafish(gene_list, zfish_gene_type, keep_mapping=False, keep_missing_orthos=False)

   Convert a list of human gene IDs to their Zebrafish orthologs.

   :param gene_list: A list of human gene IDs to be converted to Zebrafish orthologs.
   :type gene_list: list
   :param zfish_gene_type: The target gene ID type for the Zebrafish orthologs. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, or Symbol.
   :type zfish_gene_type: str
   :param keep_mapping: Whether to retain the mapping information. Default is False.
   :type keep_mapping: bool, optional
   :param keep_missing_orthos: Whether to keep gene IDs with missing orthologs. Default is False.
   :type keep_missing_orthos: bool, optional

   :returns: A list of Zebrafish gene IDs corresponding to the human gene IDs.
   :rtype: list

   .. rubric:: Notes

   - This function converts human gene IDs to their Zebrafish orthologs using orthology mapping.
   - The `zfish_gene_type` parameter specifies the type of Zebrafish gene IDs.
   - To retain the mapping information, set `keep_mapping` to True.
   - To keep human gene IDs with missing Zebrafish orthologs, set `keep_missing_orthos` to True.


.. py:function:: get_ortho_ids(gene_list, id_from, id_to, keep_mapping=False, keep_missing_orthos=False)

   Retrieve orthologous gene IDs for a given list of genes.

   :param gene_list: A list of gene IDs.
   :type gene_list: list
   :param id_from: The current gene ID type. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, Symbol, or Human NCBI Gene ID.
   :type id_from: str
   :param id_to: The target gene ID type to convert to. Must be one of: NCBI Gene ID, ZFIN ID, Ensembl ID, Symbol, or Human NCBI Gene ID.
   :type id_to: str
   :param keep_mapping: Whether to retain the mapping information. Default is False.
   :type keep_mapping: bool, optional
   :param keep_missing_orthos: Whether to keep gene IDs with missing orthologs. Default is False.
   :type keep_missing_orthos: bool, optional

   :returns: A list of orthologous gene IDs.
   :rtype: list

   .. rubric:: Notes

   - This function retrieves orthologous gene IDs for the provided gene list.
   - The mapping information can be retained by setting `keep_mapping` to True.
   - Gene IDs with missing orthologs can be retained by setting `keep_missing_orthos` to True.


.. py:function:: add_mapped_ortholog_column(data: danRerLib.settings.pd.DataFrame, id_from: str, id_to: str, column_name_with_ids=None, keep_old_ids=True, drop_na=False)

   Add a new column to a pandas DataFrame with mapped ortholog Gene IDs.

   :param data: A pandas DataFrame containing a column with Gene IDs of the specified 'id_from' type.
   :type data: pd.DataFrame
   :param id_from: The current Gene ID type to convert from. Must be one of: NCBI Gene ID, ZFIN ID,
                   Ensembl ID, Symbol, or Human NCBI Gene ID.
   :type id_from: str
   :param id_to: The Gene ID type to convert to. Must be one of: NCBI Gene ID, ZFIN ID,
                 Ensembl ID, Symbol, or Human NCBI Gene ID.
   :type id_to: str
   :param column_name_with_ids: The name of the column containing the Gene IDs if it doesn't match 'id_from'.
   :type column_name_with_ids: str, optional
   :param keep_old_ids: Whether to keep the original Gene ID column. Default is True.
   :type keep_old_ids: bool, optional
   :param drop_na: Whether to drop rows with NA values in the resulting mapped column. Default is False.
   :type drop_na: bool, optional

   :returns: A pandas DataFrame containing the added mapped ortholog Gene IDs.
   :rtype: pd.DataFrame

   .. rubric:: Notes

   - This function adds a new column to the input DataFrame containing the mapped ortholog Gene IDs.
   - The new column will have the name 'Ortholog Gene ID (Mapped)' unless specified otherwise.


.. py:function:: build_gene_mapping()

   Build the master gene mapping file named 'master_gene_mapping_file_V<VERSION_NUM>.txt'.

   This function reads data files from the database/raw_data subdirectory to create the mapping file.
   The required data files include:
   - 'zfin_to_ncbi_V<VERSION_NUM>.txt'
   - 'zfin_to_ensembl_V<VERSION_NUM>.txt'

   :raises FileNotFoundError: If one or both of the required data files are not found in the raw_data folder
       of the database directory.
   :raises DatabaseNotFoundError: If the database directory is not found in the current working directory.

   .. rubric:: Notes

   - This function merges the 'zfin_to_ncbi' and 'zfin_to_ensembl' datasets, removing unnecessary columns.
   - The resulting merged DataFrame is saved as 'master_gene_mapping_file_V<VERSION_NUM>.txt' in the database directory.
   - Make sure to have the required data files in the raw_data subdirectory before running this function.

   .. rubric:: Example

   To build the gene mapping file, you need the following data files:
   - 'zfin_to_ncbi_V<VERSION_NUM>.txt'
   - 'zfin_to_ensembl_V<VERSION_NUM>.txt'
   Place them in the raw_data folder of the database directory.


.. py:function:: build_ortho_mapping()

   Build the master orthology mapping file named 'master_ortho_mapping_file_V<VERSION_NUM>.txt'.

   This function reads data files from the database/raw_data subdirectory to create the orthology mapping file.
   The required data file includes:
   - 'zfish_human_orthology_V<VERSION_NUM>.txt'

   :raises FileNotFoundError: If the required data file is not found in the raw_data folder of the database directory.
   :raises DatabaseNotFoundError: If the database directory is not found in the current working directory.

   .. rubric:: Notes

   - This function processes the 'zfish_human_orthology' dataset, removing unnecessary columns.
   - Duplicate entries are removed, and the DataFrame is saved as 'master_ortho_mapping_file_V<VERSION_NUM>.txt'
     in the database directory.
   - Ensure that you have the required data file in the raw_data folder of the database directory before running this function.

   .. rubric:: Example

   To build the orthology mapping file, you need the following data file:
   - 'zfish_human_orthology_V<VERSION_NUM>.txt'
   Place it in the raw_data folder of the database directory.


.. py:function:: convert_to_str(value)

   Convert a value to a string, preserving NaN as np.nan.


.. py:function:: _make_sure_is_pandas_series(gene_list, id_from)

   Ensure that the input is a pandas Series.

   :param gene_list: Input data, which can be a Series, DataFrame, or list.
   :type gene_list: pd.Series, pd.DataFrame, list
   :param id_from: Identifier for the data.
   :type id_from: str

   :returns: A pandas Series based on the input data.
   :rtype: pd.Series

   .. rubric:: Notes

   This function checks the type of the input data and converts it into a pandas Series if necessary.
   If the input is a DataFrame, it will be squeezed into a Series.
   If the input is a list, it will be converted into a Series with the specified name.


.. py:function:: _check_valid_zebrafish_gene_id_type(gene_id_types)

   Check the validity of Zebrafish gene ID types.

   This function checks if the provided Zebrafish gene ID types are valid options.

   :param gene_id_types: A string or a list of Zebrafish gene ID types to be validated.
   :type gene_id_types: str or list

   :raises InvalidGeneTypeError: If one or more of the provided gene ID types are invalid.

   .. rubric:: Notes

   - Valid Zebrafish gene ID types include: NCBI Gene ID, ZFIN ID, Ensembl ID, or Symbol.
   - The input can be a single gene ID type as a string or multiple types in a list.
   - Gene ID types are case and spelling sensitive.


.. py:function:: _check_valid_gene_id_type_for_orthology(gene_id_from, gene_id_to)

   Check the validity of gene ID types for orthology mapping.

   This function checks if the provided gene ID types are valid options for orthology mapping.
   It ensures that the gene ID types are not from the same organism.

   :param gene_id_from: The source gene ID type.
   :type gene_id_from: str
   :param gene_id_to: The target gene ID type.
   :type gene_id_to: str

   :raises InvalidGeneTypeError: If one or both of the provided gene ID types are invalid or from the same organism.

   .. rubric:: Notes

   - Valid Zebrafish gene ID types include: NCBI_ID, ZFIN_ID, ENS_ID, and SYMBOL.
   - Valid human gene ID type is: HUMAN_ID.
   - Gene ID types are case and spelling sensitive.
   - To perform orthology mapping, id_from must be from organism A, and id_to must be from organism B.


.. py:function:: _check_column_name_matches_id_choice(data: danRerLib.settings.pd.DataFrame, id_from: str, column_name: str)

   Check if the specified column name matches the chosen gene ID type.

   This function ensures that the specified column name exists in the DataFrame if provided,
   or that the chosen gene ID type matches a column name in the DataFrame.

   :param data: The DataFrame containing gene ID information.
   :type data: pd.DataFrame
   :param id_from: The chosen gene ID type.
   :type id_from: str
   :param column_name: The name of the column containing gene IDs (if specified).
   :type column_name: str

   :raises InvalidGeneTypeError: If the specified column name does not exist in the dataset or
       if the chosen gene ID type does not match any column name.

   .. rubric:: Notes

   - If the 'column_name' parameter is provided, this function checks if it exists in the DataFrame.
   - If 'column_name' is not provided, it checks if 'id_from' matches any column name in the DataFrame.
   - Ensure that the dataset and column names are accurate to perform gene ID conversion.


.. py:data:: ids
   :value: ['ZDB-GENE-030131-2931', 'ZDB-GENE-081031-55', 'ZDB-GENE-081031-61', 'ZDB-GENE-110420-1',...

   

